@model MVCPresentationWithIdentity.Models.SupplierListViewModel
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;

@{
    ViewBag.Title = "Suppliers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<meta charset="utf-8" />

<div class="container">
    <div class="d-flex flex-row">
        <h2 class="mt-4">Suppliers</h2>
    </div>
    @if (Request.IsAuthenticated)
    {
        if (User.IsInRole("Event Planner"))
        {
            <div class="d-flex flex-row justify-content-end">
                <button class="btn btn-outline-dark">Create Listing</button>
            </div>
        }
    }

    <div class="row table-responsive-md">
        <table class="table table-hover" id="ListTable">
            <thead>
                <tr>
                    <th>
                        <div class="d-flex ">
                            <p class="text-start text-nowrap me-2">Name</p>
                            <button onclick="sortTable(0)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                    <th>
                        <div class="d-flex ">
                            <p class="text-start text-nowrap me-2">Description</p>
                            <button onclick="sortTable(1)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell">
                        <div class="d-flex">
                            <p class="text-start text-nowrap me-2">Type</p>
                            <button onclick="sortTable(2)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell">
                        <div class="d-flex ">
                            <p class="text-start text-nowrap me-2">City</p>
                            <button onclick="sortTable(3)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell">
                        <div class="d-flex ">
                            <p class="text-start text-nowrap me-2">State</p>
                            <button onclick="sortTable(4)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                    <th scope="col" class="d-none d-sm-table-cell">
                        <div class="d-flex ">
                            <p class="text-start text-nowrap me-2">Rating</p>
                            <button onclick="sortTable(5)" class="btn btn-sm btn-outline-dark ms-auto">
                                <i class="bi bi-arrow-down-up"></i>
                            </button>
                        </div>
                    </th>
                </tr>
            </thead>

            @foreach (DataObjects.Supplier supplier in Model.Suppliers)
            {
                <tr>
                    <td><a href=@Url.Action("ViewSupplierDetails","Supplier",new {supplierID = supplier.SupplierID })>@supplier.Name <i class="bi bi-box-arrow-up-right"></i></a></td>
                    <td>
                        @Html.DisplayFor(modelItem => supplier.Description)
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => supplier.TypeID)
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => supplier.City)
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => supplier.State)
                    </td>


                    <td class="d-none d-sm-table-cell">
                        <div class="d-flex flex-row">
                            @switch (supplier.AverageRating)
                            {
                                case 0:
                                    break;
                                case 1:
                                    <div class="text-center">
                                        <i class="bi bi-star-fill"></i>
                                        <i class="bi bi-star"></i>
                                        <i class="bi bi-star"></i>
                                        <i class="bi bi-star"></i>
                                        <i class="bi bi-star"></i>
                                    </div>
                                    break;
                                case 2:
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star"></i>
                                    <i class="bi bi-star"></i>
                                    <i class="bi bi-star"></i>
                                    break;
                                case 3:
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star"></i>
                                    <i class="bi bi-star"></i>
                                    break;
                                case 4:
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star"></i>
                                    break;
                                case 5:
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    <i class="bi bi-star-fill"></i>
                                    break;
                            }

                        </div>

                    </td>

                </tr>
            }
        </table>

        <div class="pagination justify-content-center">
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("ViewSuppliers", new { page = x }))
        </div>

    </div>
</div>
